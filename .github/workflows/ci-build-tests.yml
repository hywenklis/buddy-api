name: CI Pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - main
      - develop
      - 'release/*'
      - 'hotfix/*'

permissions:
  contents: read

env:
  JAVA_VERSION: '21'
  GRADLE_VERSION: '8.7'

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      issues: read
      checks: write
      pull-requests: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@a8f75513eafdebd8141bd1cd4e30fcd194af8dfa # v2.12.0
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Use Gradle Cache
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and test with Gradle wrapper
        run: |
          chmod +x gradlew
          ./gradlew clean build test jacocoTestReport --no-daemon

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b # v2.18.0
        if: always()
        with:
          check_name: Tests Results
          junit_files: '**/build/test-results/**/*.xml'
          strategy: replace

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@db72e7e7c96f98d239967958b0a0a6ca7d3bb45f # v1.6.1
        continue-on-error: true
        if: github.event_name == 'pull_request'
        with:
          paths: ${{ github.workspace }}/**/build/reports/jacoco/test/*.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: Code Coverage
          update-comment: true

      - name: Report Coverage Metrics
        if: github.event_name == 'pull_request'
        run: |
          echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
          echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}

      - name: Create and push tag
        if: github.event_name == 'push' && github.repository == 'hywenklis/buddy-api' && contains(github.ref, 'refs/heads/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --prune --tags
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null)
          if [ -z "$VERSION" ]; then
            VERSION="1.0.0"
            git tag $VERSION
          else
            VERSION_BITS=(${VERSION//./ })
            VNUM1=${VERSION_BITS[0]}
            VNUM2=${VERSION_BITS[1]}
            VNUM3=${VERSION_BITS[2]}
            if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
              VNUM3=$((VNUM3+1))
            elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
              VNUM2=$((VNUM2+1))
              VNUM3=0
            fi
            NEW_TAG="$VNUM1.$VNUM2.$VNUM3"
            while git rev-parse "$NEW_TAG" >/dev/null 2>&1; do
              VNUM3=$((VNUM3+1))
              NEW_TAG="$VNUM1.$VNUM2.$VNUM3"
            done
            echo "Updating $VERSION to $NEW_TAG"
            git tag $NEW_TAG
          fi
          git push origin --tags

  deploy:
    name: Deploy to Jenkins
    runs-on: ubuntu-latest
    needs: build_and_test
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'main')
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: "Deploy to Jenkins"
        run: |
          curl -X POST "${{ secrets.JENKINS_URL }}/job/${{ secrets.JENKINS_JOB }}/buildWithParameters?PROJECT=${{ secrets.JENKINS_PROJECT }}&GIT_BRANCH=main" \
          --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}"
