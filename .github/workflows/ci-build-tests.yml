name: CI Pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - main
      - develop
      - 'release/*'
      - 'hotfix/*'

permissions:
  contents: read

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    environment: pr_checks
    permissions:
      actions: write
      contents: write
      issues: read
      checks: write
      pull-requests: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Java 21
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Use Gradle Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and test with Gradle wrapper
        run: |
          chmod +x gradlew
          ./gradlew clean build test jacocoTestReport

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@567cc7f8dcea3eba5da355f6ebc95663310d8a07 # v2.17.0
        if: always()
        with:
          check_name: Tests Results
          junit_files: '**/build/test-results/**/*.xml'
          strategy: replace

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@db72e7e7c96f98d239967958b0a0a6ca7d3bb45f # v1.6.1
        continue-on-error: true
        with:
          paths: ${{ github.workspace }}/**/build/reports/jacoco/test/*.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          debug-mode: true
          title: Code Coverage
          update-comment: true

      - name: Report Coverage Metrics
        run: |
          echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
          echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@e0b68c6749509c5f83f984dd99a76a1c1a231044 # v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hywenklis/buddy-api

      - name: Create and push tag
        if: github.event_name == 'push' && contains(github.ref, 'refs/heads/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --prune --tags
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null)
          if [ -z "$VERSION" ]; then
            VERSION="1.0.0"
            git tag $VERSION
          else
            VERSION_BITS=(${VERSION//./ })
            VNUM1=${VERSION_BITS[0]}
            VNUM2=${VERSION_BITS[1]}
            VNUM3=${VERSION_BITS[2]}
            if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
              VNUM3=$((VNUM3+1))
            elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
              VNUM2=$((VNUM2+1))
              VNUM3=0
            fi
            NEW_TAG="$VNUM1.$VNUM2.$VNUM3"
            while git rev-parse "$NEW_TAG" >/dev/null 2>&1; do
              VNUM3=$((VNUM3+1))
              NEW_TAG="$VNUM1.$VNUM2.$VNUM3"
            done
            echo "Updating $VERSION to $NEW_TAG"
            git tag $NEW_TAG
          fi
          git push origin --tags
