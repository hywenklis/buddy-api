name: Code Review com IA

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
      - 'release/*'
      - 'hotfix/*'

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      issues: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Obter diff da PR
        id: diff
        run: |
          git fetch origin --unshallow || true
          DIFF=$(git diff ${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }})
          echo "$DIFF" > diff.txt
          if [ -z "$DIFF" ] || [ ${#DIFF} -lt 50 ]; then
            echo "SKIP_REVIEW=true" >> $GITHUB_ENV
            echo "‚ö†Ô∏è Diff vazio ou muito pequeno, pulando revis√£o."
          else
            echo "SKIP_REVIEW=false" >> $GITHUB_ENV
          fi

      - name: Gerar resumo com IA
        id: generate_summary
        if: ${{ env.SKIP_REVIEW == 'false' }}
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          ESCAPED_DIFF=$(jq -Rs . < diff.txt)

          cat > payload.json <<EOF
          {
            "model": "deepseek/deepseek-chat-v3-0324:free",
            "messages": [
              {
                "role": "system",
                "content": "Voc√™ √© um engenheiro de software experiente e revisor de c√≥digo. Analise o diff de c√≥digo fornecido e gere um resumo em formato markdown para um coment√°rio de Pull Request. O resumo deve estar em PORTUGU√äS BRASILEIRO, ser claro, t√©cnico e estruturado com os seguintes t√≥picos:\n\n1. **Vis√£o Geral**: breve descri√ß√£o do que a PR faz;\n2. **Prop√≥sito**: o motivo das altera√ß√µes e o problema que resolve ou funcionalidade adicionada;\n3. **Altera√ß√µes**: lista dos arquivos modificados com explica√ß√µes detalhadas de cada mudan√ßa, incluindo trechos relevantes em blocos de c√≥digo;\n4. **Impacto**: como essas altera√ß√µes afetam o sistema (funcionalidade, desempenho, manuten√ß√£o);\n5. **Testes**: como foi testado e se houve adi√ß√£o de novos testes;\n6. **Sugest√µes de Melhoria**: recomende melhorias t√©cnicas com explica√ß√µes claras, baseadas em boas pr√°ticas (ex: legibilidade, performance, desacoplamento, padr√£o de projeto, SOLID, etc);\n7. **Notas**: qualquer observa√ß√£o relevante, como depend√™ncias ou pr√≥ximos passos.\n\nA resposta deve estar em Markdown puro, com cabe√ßalhos, listas e blocos de c√≥digo bem formatados."
              },
              {
                "role": "user",
                "content": $ESCAPED_DIFF
              }
            ]
          }
          EOF
      
          RESPONSE=$(curl -s https://openrouter.ai/api/v1/chat/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $OPENROUTER_API_KEY" \
          --data-binary @payload.json)
        
          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // ""')
        
          if [ -z "$SUMMARY" ]; then
          echo "‚ö†Ô∏è Resumo n√£o gerado pela IA, usando fallback."
          SUMMARY="# Resumo da PR\n\nNenhuma descri√ß√£o detalhada gerada. Altera√ß√µes detectadas no diff, mas sem resumo espec√≠fico."
          fi
          
          echo "$SUMMARY" > summary.md
          echo "has_summary=true" >> $GITHUB_OUTPUT

      - name: Atualizar descri√ß√£o da PR com o resumo
        if: ${{ env.SKIP_REVIEW == 'false' && steps.generate_summary.outputs.has_summary == 'true' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('summary.md', 'utf8');
            
            if (!summary.trim()) {
              console.log("‚ö†Ô∏è Resumo vazio, n√£o atualizando descri√ß√£o.");
              return;
            }
            
            const { owner, repo } = context.repo;
            const pull_number = context.payload.pull_request.number;
            
            const { data: pr } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number
            });
            
            const novaDescricao = `### ü§ñ Resumo autom√°tico da IA\n\n${summary}\n\n---\nüìù _Este resumo foi gerado automaticamente por IA com base nas altera√ß√µes da PR. Sugest√µes e melhorias est√£o inclu√≠das._\n\n---\n${pr.body || ''}`.trim();
            
            await github.rest.pulls.update({
              owner,
              repo,
              pull_number,
              body: novaDescricao
            });
            
            console.log("‚úÖ Descri√ß√£o da PR atualizada com sucesso.");
